name: Unit Tests

on:
  push:
    branches: [ traffic_anomaly_package, main, master ]
    paths:
      - 'src/**'
  pull_request:
    branches: [ traffic_anomaly_package, main, master ]
    paths:
      - 'src/**'
  release:
    types: [created]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ['3.7', '3.12', '3.13']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install pytest pytest-cov build pandas pyarrow toml
        pip install .

    - name: Build package
      run: python -m build

    - name: Run tests with coverage
      run: pytest --cov=src --cov-report=xml --junitxml=pytest-results.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        fail_ci_if_error: false
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.13'

    - name: Upload pytest results
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results-${{ matrix.os }}-${{ matrix.python-version }}
        path: pytest-results.xml
      if: ${{ always() }}

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && success()

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: twine upload dist/* 