name: Unit Tests

on:
  push:
    branches: [ traffic_anomaly_package, main, master ]
    paths:
      - 'src/**'
  pull_request:
    branches: [ traffic_anomaly_package, main, master ]
    paths:
      - 'src/**'
  release:
    types: [created]
  workflow_dispatch:

jobs:
  test:
    name: tests (${{ matrix.os }}, py${{ matrix.python-version }}, ibis ${{ matrix.ibis-major }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Ubuntu focus (min, mid, max Python; both ibis)
          - os: ubuntu-latest
            python-version: '3.9'
            ibis-major: '9'
            ibis-spec: '>=9,<10'
          - os: ubuntu-latest
            python-version: '3.13'
            ibis-major: '10'
            ibis-spec: '>=10,<11'
          - os: ubuntu-latest
            python-version: '3.11'
            ibis-major: '10'
            ibis-spec: '>=10,<11'
          - os: ubuntu-latest
            python-version: '3.11'
            ibis-major: '9'
            ibis-spec: '>=9,<10'

          # Windows coverage (two distinct Pythons; both ibis)
          - os: windows-latest
            python-version: '3.10'
            ibis-major: '9'
            ibis-spec: '>=9,<10'
          - os: windows-latest
            python-version: '3.12'
            ibis-major: '10'
            ibis-spec: '>=10,<11'
          - os: windows-latest
            python-version: '3.9'
            ibis-major: '10'
            ibis-spec: '>=10,<11'

          # macOS coverage (two distinct Pythons; both ibis)
          - os: macos-latest
            python-version: '3.12'
            ibis-major: '9'
            ibis-spec: '>=9,<10'
          - os: macos-latest
            python-version: '3.10'
            ibis-major: '10'
            ibis-spec: '>=10,<11'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install pytest pytest-cov build pandas pyarrow toml
        pip install "ibis-framework[duckdb]${{ matrix.ibis-spec }}"
        # Install the package without deps so the pinned ibis stays in place
        pip install --no-deps .

    - name: Build package
      run: python -m build

    - name: Run tests with coverage
      run: pytest --cov=src --cov-report=xml --junitxml=pytest-results.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        fail_ci_if_error: false
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.13'

    - name: Upload pytest results
      uses: actions/upload-artifact@v4
      with:
        name: pytest-results-${{ matrix.os }}-py${{ matrix.python-version }}-ibis${{ matrix.ibis-major }}
        path: pytest-results.xml
      if: ${{ always() }}

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && success()

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: twine upload dist/*